var search_data = {"index":{"searchIndex":["addressable","uri","faraday","request","response","faradaymiddleware","caching","chunked","encodejson","faraday","followredirects","instrumentation","mashify","mashify","hashie","methodoverride","oauth","oauth","oauth2","oauth2","optionsextension","parsedates","parsejson","parsejson","mimetypefix","parsemarshal","parsemarshal","parsexml","parsexml","parseyaml","parseyaml","rackcompatible","rashify","rashify","hashie","redirectlimitreached","responsemiddleware","body_params()","body_params()","cache_key()","cache_on_complete()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","chunked_encoding?()","define_parser()","each()","encode()","fetch()","finalize_response()","finalize_response()","first_char()","follow_limit()","follow_redirect?()","has_body?()","headers_to_rack()","include_body_params?()","include_body_params?()","inherited()","keep_cookies()","match_content_type()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalized_query()","normalized_query_without_ordering_fix()","oauth_header()","oauth_header()","oauth_options()","oauth_options()","params_to_ignore()","parse()","parse()","parse()","parse_dates!()","parse_response?()","parse_response?()","parse_response?()","perform_with_redirection()","prepare_env()","preserve_raw?()","process_request?()","process_response()","process_response()","process_response_type?()","query_params()","query_params()","request_type()","response_type()","restore_env()","rewrite_request()","rewrite_request?()","selected_cookies()","selected_request_cookies()","sign_request?()","sign_request?()","signature_params()","signature_params()","standards_compliant?()","to_hash()","transform_into_get?()","update_env()"],"longSearchIndex":["addressable","addressable::uri","faraday","faraday::request","faraday::response","faradaymiddleware","faradaymiddleware::caching","faradaymiddleware::chunked","faradaymiddleware::encodejson","faradaymiddleware::faraday","faradaymiddleware::followredirects","faradaymiddleware::instrumentation","faradaymiddleware::mashify","faradaymiddleware::mashify","faradaymiddleware::mashify::hashie","faradaymiddleware::methodoverride","faradaymiddleware::oauth","faradaymiddleware::oauth","faradaymiddleware::oauth2","faradaymiddleware::oauth2","faradaymiddleware::optionsextension","faradaymiddleware::parsedates","faradaymiddleware::parsejson","faradaymiddleware::parsejson","faradaymiddleware::parsejson::mimetypefix","faradaymiddleware::parsemarshal","faradaymiddleware::parsemarshal","faradaymiddleware::parsexml","faradaymiddleware::parsexml","faradaymiddleware::parseyaml","faradaymiddleware::parseyaml","faradaymiddleware::rackcompatible","faradaymiddleware::rashify","faradaymiddleware::rashify","faradaymiddleware::rashify::hashie","faradaymiddleware::redirectlimitreached","faradaymiddleware::responsemiddleware","faradaymiddleware::oauth#body_params()","faradaymiddleware::oauth#body_params()","faradaymiddleware::caching#cache_key()","faradaymiddleware::caching#cache_on_complete()","faradaymiddleware::caching#call()","faradaymiddleware::encodejson#call()","faradaymiddleware::followredirects#call()","faradaymiddleware::instrumentation#call()","faradaymiddleware::methodoverride#call()","faradaymiddleware::oauth#call()","faradaymiddleware::oauth#call()","faradaymiddleware::oauth2#call()","faradaymiddleware::oauth2#call()","faradaymiddleware::parsedates#call()","faradaymiddleware::rackcompatible#call()","faradaymiddleware::responsemiddleware#call()","faradaymiddleware::chunked#chunked_encoding?()","faradaymiddleware::responsemiddleware::define_parser()","faradaymiddleware::optionsextension#each()","faradaymiddleware::encodejson#encode()","faradaymiddleware::optionsextension#fetch()","faradaymiddleware::caching#finalize_response()","faradaymiddleware::rackcompatible#finalize_response()","faradaymiddleware::parsejson::mimetypefix#first_char()","faradaymiddleware::followredirects#follow_limit()","faradaymiddleware::followredirects#follow_redirect?()","faradaymiddleware::encodejson#has_body?()","faradaymiddleware::rackcompatible#headers_to_rack()","faradaymiddleware::oauth#include_body_params?()","faradaymiddleware::oauth#include_body_params?()","faradaymiddleware::responsemiddleware::inherited()","faradaymiddleware::followredirects#keep_cookies()","faradaymiddleware::encodejson#match_content_type()","faradaymiddleware::caching::new()","faradaymiddleware::followredirects::new()","faradaymiddleware::instrumentation::new()","faradaymiddleware::mashify::new()","faradaymiddleware::mashify::new()","faradaymiddleware::methodoverride::new()","faradaymiddleware::oauth::new()","faradaymiddleware::oauth::new()","faradaymiddleware::oauth2::new()","faradaymiddleware::oauth2::new()","faradaymiddleware::parsedates::new()","faradaymiddleware::rackcompatible::new()","faradaymiddleware::redirectlimitreached::new()","faradaymiddleware::responsemiddleware::new()","addressable::uri#normalized_query()","addressable::uri#normalized_query_without_ordering_fix()","faradaymiddleware::oauth#oauth_header()","faradaymiddleware::oauth#oauth_header()","faradaymiddleware::oauth#oauth_options()","faradaymiddleware::oauth#oauth_options()","faradaymiddleware::caching#params_to_ignore()","faradaymiddleware::mashify#parse()","faradaymiddleware::mashify#parse()","faradaymiddleware::responsemiddleware#parse()","faradaymiddleware::parsedates#parse_dates!()","faradaymiddleware::chunked#parse_response?()","faradaymiddleware::parsejson::mimetypefix#parse_response?()","faradaymiddleware::responsemiddleware#parse_response?()","faradaymiddleware::followredirects#perform_with_redirection()","faradaymiddleware::rackcompatible#prepare_env()","faradaymiddleware::responsemiddleware#preserve_raw?()","faradaymiddleware::encodejson#process_request?()","faradaymiddleware::parsejson::mimetypefix#process_response()","faradaymiddleware::responsemiddleware#process_response()","faradaymiddleware::responsemiddleware#process_response_type?()","faradaymiddleware::oauth2#query_params()","faradaymiddleware::oauth2#query_params()","faradaymiddleware::encodejson#request_type()","faradaymiddleware::responsemiddleware#response_type()","faradaymiddleware::rackcompatible#restore_env()","faradaymiddleware::methodoverride#rewrite_request()","faradaymiddleware::methodoverride#rewrite_request?()","faradaymiddleware::followredirects#selected_cookies()","faradaymiddleware::followredirects#selected_request_cookies()","faradaymiddleware::oauth#sign_request?()","faradaymiddleware::oauth#sign_request?()","faradaymiddleware::oauth#signature_params()","faradaymiddleware::oauth#signature_params()","faradaymiddleware::followredirects#standards_compliant?()","faradaymiddleware::optionsextension#to_hash()","faradaymiddleware::followredirects#transform_into_get?()","faradaymiddleware::followredirects#update_env()"],"info":[["Addressable","","Addressable.html","",""],["Addressable::URI","","Addressable/URI.html","","<p>fix `normalized_query` by sorting query key-value pairs (rejected:\ngithub.com/sporkmonger/addressable/issues/28 …\n"],["Faraday","","Faraday.html","",""],["Faraday::Request","","Faraday/Request.html","",""],["Faraday::Response","","Faraday/Response.html","",""],["FaradayMiddleware","","FaradayMiddleware.html","",""],["FaradayMiddleware::Caching","","FaradayMiddleware/Caching.html","","<p>Public: Caches GET responses and pulls subsequent ones from the cache.\n"],["FaradayMiddleware::Chunked","","FaradayMiddleware/Chunked.html","","<p>Public: Parse a Transfer-Encoding: Chunked response to just the original\ndata\n"],["FaradayMiddleware::EncodeJson","","FaradayMiddleware/EncodeJson.html","","<p>Request middleware that encodes the body as JSON.\n<p>Processes only requests with matching Content-type or …\n"],["FaradayMiddleware::Faraday","","FaradayMiddleware/Faraday.html","",""],["FaradayMiddleware::FollowRedirects","","FaradayMiddleware/FollowRedirects.html","","<p>Public: Follow HTTP 301, 302, 303, and 307 redirects for GET, PATCH, POST,\nPUT, and DELETE requests. …\n"],["FaradayMiddleware::Instrumentation","","FaradayMiddleware/Instrumentation.html","","<p>Public: Instruments requests using Active Support.\n<p>Measures time spent only for synchronous requests. …\n"],["FaradayMiddleware::Mashify","","FaradayMiddleware/Mashify.html","","<p>Public: Converts parsed response bodies to a Hashie::Mash if they were of\nHash or Array type.\n"],["FaradayMiddleware::Mashify","","FaradayMiddleware/Mashify.html","","<p>Public: Converts parsed response bodies to a Hashie::Mash if they were of\nHash or Array type.\n"],["FaradayMiddleware::Mashify::Hashie","","FaradayMiddleware/Mashify/Hashie.html","",""],["FaradayMiddleware::MethodOverride","","FaradayMiddleware/MethodOverride.html","","<p>Public: Writes the original HTTP method to “X-Http-Method-Override” header\nand sends the request …\n"],["FaradayMiddleware::OAuth","","FaradayMiddleware/OAuth.html","","<p>Public: Uses the simple_oauth library to sign requests according the OAuth\nprotocol.\n<p>The options for this …\n"],["FaradayMiddleware::OAuth","","FaradayMiddleware/OAuth.html","","<p>Public: Uses the simple_oauth library to sign requests according the OAuth\nprotocol.\n<p>The options for this …\n"],["FaradayMiddleware::OAuth2","","FaradayMiddleware/OAuth2.html","","<p>Public: A simple middleware that adds an access token to each request.\n<p>The token is added as both “access_token” …\n"],["FaradayMiddleware::OAuth2","","FaradayMiddleware/OAuth2.html","","<p>Public: A simple middleware that adds an access token to each request.\n<p>The token is added as both “access_token” …\n"],["FaradayMiddleware::OptionsExtension","","FaradayMiddleware/OptionsExtension.html","","<p>DRAGONS\n"],["FaradayMiddleware::ParseDates","","FaradayMiddleware/ParseDates.html","","<p>Parse dates from response body\n"],["FaradayMiddleware::ParseJson","","FaradayMiddleware/ParseJson.html","","<p>Public: Parse response bodies as JSON.\n"],["FaradayMiddleware::ParseJson","","FaradayMiddleware/ParseJson.html","","<p>Public: Parse response bodies as JSON.\n"],["FaradayMiddleware::ParseJson::MimeTypeFix","","FaradayMiddleware/ParseJson/MimeTypeFix.html","","<p>Public: Override the content-type of the response with “application/json”\nif the response body …\n"],["FaradayMiddleware::ParseMarshal","","FaradayMiddleware/ParseMarshal.html","","<p>Public: Restore marshalled Ruby objects in response bodies.\n"],["FaradayMiddleware::ParseMarshal","","FaradayMiddleware/ParseMarshal.html","","<p>Public: Restore marshalled Ruby objects in response bodies.\n"],["FaradayMiddleware::ParseXml","","FaradayMiddleware/ParseXml.html","","<p>Public: parses response bodies with MultiXml.\n"],["FaradayMiddleware::ParseXml","","FaradayMiddleware/ParseXml.html","","<p>Public: parses response bodies with MultiXml.\n"],["FaradayMiddleware::ParseYaml","","FaradayMiddleware/ParseYaml.html","","<p>Public: Parse response bodies as YAML.\n"],["FaradayMiddleware::ParseYaml","","FaradayMiddleware/ParseYaml.html","","<p>Public: Parse response bodies as YAML.\n"],["FaradayMiddleware::RackCompatible","","FaradayMiddleware/RackCompatible.html","","<p>Wraps a handler originally written for Rack to make it compatible with\nFaraday.\n<p>Experimental. Only handles …\n"],["FaradayMiddleware::Rashify","","FaradayMiddleware/Rashify.html","","<p>Public: Converts parsed response bodies to a Hashie::Rash if they were of\nHash or Array type.\n"],["FaradayMiddleware::Rashify","","FaradayMiddleware/Rashify.html","","<p>Public: Converts parsed response bodies to a Hashie::Rash if they were of\nHash or Array type.\n"],["FaradayMiddleware::Rashify::Hashie","","FaradayMiddleware/Rashify/Hashie.html","",""],["FaradayMiddleware::RedirectLimitReached","","FaradayMiddleware/RedirectLimitReached.html","","<p>Public: Exception thrown when the maximum amount of requests is exceeded.\n"],["FaradayMiddleware::ResponseMiddleware","","FaradayMiddleware/ResponseMiddleware.html","","<p>Internal: The base class for middleware that parses responses.\n"],["body_params","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-body_params","(env)",""],["body_params","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-body_params","(env)",""],["cache_key","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-i-cache_key","(env)",""],["cache_on_complete","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-i-cache_on_complete","(env)",""],["call","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-i-call","(env)",""],["call","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-call","(env)",""],["call","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-call","(env)",""],["call","FaradayMiddleware::Instrumentation","FaradayMiddleware/Instrumentation.html#method-i-call","(env)",""],["call","FaradayMiddleware::MethodOverride","FaradayMiddleware/MethodOverride.html#method-i-call","(env)",""],["call","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-call","(env)",""],["call","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-call","(env)",""],["call","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-i-call","(env)",""],["call","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-i-call","(env)",""],["call","FaradayMiddleware::ParseDates","FaradayMiddleware/ParseDates.html#method-i-call","(env)",""],["call","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-i-call","(env)",""],["call","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-call","(environment)",""],["chunked_encoding?","FaradayMiddleware::Chunked","FaradayMiddleware/Chunked.html#method-i-chunked_encoding-3F","(headers)",""],["define_parser","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-c-define_parser","(parser = nil)","<p>Store a Proc that receives the body and returns the parsed result.\n"],["each","FaradayMiddleware::OptionsExtension","FaradayMiddleware/OptionsExtension.html#method-i-each","()",""],["encode","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-encode","(data)",""],["fetch","FaradayMiddleware::OptionsExtension","FaradayMiddleware/OptionsExtension.html#method-i-fetch","(key, *args)",""],["finalize_response","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-i-finalize_response","(response, env)",""],["finalize_response","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-i-finalize_response","(env, rack_response)",""],["first_char","FaradayMiddleware::ParseJson::MimeTypeFix","FaradayMiddleware/ParseJson/MimeTypeFix.html#method-i-first_char","(body)",""],["follow_limit","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-follow_limit","()",""],["follow_redirect?","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-follow_redirect-3F","(env, response)",""],["has_body?","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-has_body-3F","(env)",""],["headers_to_rack","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-i-headers_to_rack","(env)",""],["include_body_params?","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-include_body_params-3F","(env)",""],["include_body_params?","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-include_body_params-3F","(env)",""],["inherited","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-c-inherited","(subclass)",""],["keep_cookies","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-keep_cookies","(env)",""],["match_content_type","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-match_content_type","(env)",""],["new","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-c-new","(app, cache = nil, options = {})","<p>Public: initialize the middleware.\n<p>cache   - An object that responds to read, write and fetch (default: …\n"],["new","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-c-new","(app, options = {})","<p>Public: Initialize the middleware.\n<p>options - An options Hash (default: {}):\n\n<pre> limit - A Numeric redirect ...</pre>\n"],["new","FaradayMiddleware::Instrumentation","FaradayMiddleware/Instrumentation.html#method-c-new","(app, options = {})",""],["new","FaradayMiddleware::Mashify","FaradayMiddleware/Mashify.html#method-c-new","(app = nil, options = {})",""],["new","FaradayMiddleware::Mashify","FaradayMiddleware/Mashify.html#method-c-new","(app = nil, options = {})",""],["new","FaradayMiddleware::MethodOverride","FaradayMiddleware/MethodOverride.html#method-c-new","(app, options = nil)","<p>Public: Initialize the middleware.\n<p>app     - the Faraday app to wrap options - (optional)\n\n<pre>:rewrite - Array ...</pre>\n"],["new","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-c-new","(app, options)",""],["new","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-c-new","(app, options)",""],["new","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-c-new","(app, token = nil, options = {})",""],["new","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-c-new","(app, token = nil, options = {})",""],["new","FaradayMiddleware::ParseDates","FaradayMiddleware/ParseDates.html#method-c-new","(app, options = {})",""],["new","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-c-new","(app, rack_handler, *args)",""],["new","FaradayMiddleware::RedirectLimitReached","FaradayMiddleware/RedirectLimitReached.html#method-c-new","(response)",""],["new","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-c-new","(app = nil, options = {})",""],["normalized_query","Addressable::URI","Addressable/URI.html#method-i-normalized_query","()",""],["normalized_query_without_ordering_fix","Addressable::URI","Addressable/URI.html#method-i-normalized_query_without_ordering_fix","()",""],["oauth_header","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-oauth_header","(env)",""],["oauth_header","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-oauth_header","(env)",""],["oauth_options","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-oauth_options","(env)",""],["oauth_options","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-oauth_options","(env)",""],["params_to_ignore","FaradayMiddleware::Caching","FaradayMiddleware/Caching.html#method-i-params_to_ignore","()",""],["parse","FaradayMiddleware::Mashify","FaradayMiddleware/Mashify.html#method-i-parse","(body)",""],["parse","FaradayMiddleware::Mashify","FaradayMiddleware/Mashify.html#method-i-parse","(body)",""],["parse","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-parse","(body)","<p>Parse the response body.\n<p>Instead of overriding this method, consider using `define_parser`.\n"],["parse_dates!","FaradayMiddleware::ParseDates","FaradayMiddleware/ParseDates.html#method-i-parse_dates-21","(value)",""],["parse_response?","FaradayMiddleware::Chunked","FaradayMiddleware/Chunked.html#method-i-parse_response-3F","(env)",""],["parse_response?","FaradayMiddleware::ParseJson::MimeTypeFix","FaradayMiddleware/ParseJson/MimeTypeFix.html#method-i-parse_response-3F","(env)",""],["parse_response?","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-parse_response-3F","(env)",""],["perform_with_redirection","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-perform_with_redirection","(env, follows)",""],["prepare_env","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-i-prepare_env","(faraday_env)","<p>faraday to rack-compatible\n"],["preserve_raw?","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-preserve_raw-3F","(env)",""],["process_request?","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-process_request-3F","(env)",""],["process_response","FaradayMiddleware::ParseJson::MimeTypeFix","FaradayMiddleware/ParseJson/MimeTypeFix.html#method-i-process_response","(env)",""],["process_response","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-process_response","(env)",""],["process_response_type?","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-process_response_type-3F","(type)",""],["query_params","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-i-query_params","(url)",""],["query_params","FaradayMiddleware::OAuth2","FaradayMiddleware/OAuth2.html#method-i-query_params","(url)",""],["request_type","FaradayMiddleware::EncodeJson","FaradayMiddleware/EncodeJson.html#method-i-request_type","(env)",""],["response_type","FaradayMiddleware::ResponseMiddleware","FaradayMiddleware/ResponseMiddleware.html#method-i-response_type","(env)",""],["restore_env","FaradayMiddleware::RackCompatible","FaradayMiddleware/RackCompatible.html#method-i-restore_env","(rack_env)","<p>rack to faraday-compatible\n"],["rewrite_request","FaradayMiddleware::MethodOverride","FaradayMiddleware/MethodOverride.html#method-i-rewrite_request","(env, original_method)","<p>Internal: Write the original HTTP method to header, change method to POST.\n"],["rewrite_request?","FaradayMiddleware::MethodOverride","FaradayMiddleware/MethodOverride.html#method-i-rewrite_request-3F","(method)",""],["selected_cookies","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-selected_cookies","(cookies)",""],["selected_request_cookies","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-selected_request_cookies","(cookies)",""],["sign_request?","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-sign_request-3F","(env)",""],["sign_request?","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-sign_request-3F","(env)",""],["signature_params","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-signature_params","(params)",""],["signature_params","FaradayMiddleware::OAuth","FaradayMiddleware/OAuth.html#method-i-signature_params","(params)",""],["standards_compliant?","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-standards_compliant-3F","()",""],["to_hash","FaradayMiddleware::OptionsExtension","FaradayMiddleware/OptionsExtension.html#method-i-to_hash","()",""],["transform_into_get?","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-transform_into_get-3F","(response)",""],["update_env","FaradayMiddleware::FollowRedirects","FaradayMiddleware/FollowRedirects.html#method-i-update_env","(env, request_body, response)",""]]}}
var search_data = {"index":{"searchIndex":["cri","commanddsl","r10k","cli","deploy","display","environment","module","environment","deploy","list","stale","module","deploy","list","puppetfile","check","install","purge","synchronize","version","deployment","basedir","config","configerror","loader","environment","source","environment","base","git","svn","execution","executionfailure","git","alternates","cache","commit","giterror","head","ref","remotehead","repository","tag","unresolvablereferror","workingdir","instancecache","keyedfactory","duplicateimplementationerror","unknownimplementationerror","logging","module","base","forge","git","metadata","svn","modulerepository","forge","puppetfile","dsl","r10kerror","registry","svn","remote","workingdir","semver","settings","container","invalidkey","mixin","classmethods","instancemethods","source","base","git","branchname","svn","branchname","task","base","deployment","deployenvironments","deploymodules","display","purgeenvironments","sharedbehaviors","environment","deploy","module","sync","puppetfile","deploymodules","purge","sync","taskrunner","util","coreext","hashext","symbolizekeys","platform","purgeable","subprocess","io","posix","io","runner","result","runner","subprocesserror","windows","io","runner","<<()","<=>()","==()","[]()","[]()","[]()","[]=()","active_environments()","add_module()","add_valid_key()","append_task()","apply_config_settings()","attach_pipes()","attributes_from_hash()","branch_names()","branch_names()","branches()","branches()","cached?()","call()","call()","call()","call()","call()","call()","call()","call()","call()","checkout()","checkout()","clear!()","clear!()","clone()","cloned?()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","command()","correct?()","crashed?()","crashed?()","crashed?()","current()","current_contents()","current_contents()","current_contents()","current_version()","def_setting_attr()","defaults()","desired_contents()","desired_contents()","desired_contents()","desired_contents()","dirname()","dirname()","environments()","environments()","environments()","environments()","execute()","execute()","execute_child()","execute_parent()","exist?()","exist?()","exist?()","exist?()","exit_code()","exit_code()","exit_code()","exit_value()","expected_version()","factory()","failed?()","fetch()","fetch?()","fetch?()","fetch?()","fetch?()","fetch_from_cache()","fetch_remote()","fetch_sources()","find_matching()","forge()","formatter()","from_hash()","full_path()","generate()","generate()","generate()","generate()","generate()","generate_environments()","generate_environments()","git()","git?()","implement?()","implement?()","implement?()","include?()","included()","included()","info()","insert_task_after()","inspect()","inspect()","install()","install()","install()","instance_cache()","insync?()","is_svn?()","latest_version()","level()","level=()","levels()","load()","load!()","load_config()","load_config()","load_environments()","load_modulemap!()","load_sources()","logger()","logger()","logger_name()","managed_directory()","managed_directory()","managed_directory()","managed_directory()","matched_by?()","message()","method_missing()","mod()","moduledir()","modules()","modules()","needs_checkout?()","needs_fetch?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","outdated?()","outputter()","owner()","parse_level()","parse_options()","parse_options()","path()","pending_contents()","platform()","pmt()","populate_loadpath()","pre()","preload!()","preload!()","preload!()","prepend_task()","puppetfile_contents()","purge!()","read()","read()","ref_needs_fetch?()","register()","register()","register()","reinstall()","reinstall()","remotes()","remove_tags()","resolvable?()","resolve_commit()","resolve_head()","resolve_ref()","resolve_remote_head()","resolve_remote_head()","resolve_tag()","retrieve()","retrieve()","rev_parse()","revision()","root()","run()","run()","run()","run()","runner()","sanitized_dirname()","search()","set_forge()","set_moduledir()","set_version_from_forge()","setting()","settings()","settings()","sha1()","sha1()","sources()","stale_contents()","start()","start()","status()","status()","status()","status_pipe()","succeeded?()","success?()","svn()","svn()","symbolize_keys!()","sync()","sync()","sync()","sync()","sync()","sync()","sync()","sync()","sync!()","sync_modules()","sync_modules()","tags()","to_a()","to_s()","to_s()","to_s()","trunk()","uninstall()","uninstall()","uninstall()","update()","update()","update()","update_remotes()","update_remotes?()","upgrade()","url()","valid?()","valid?()","valid_key?()","validate?()","validate_key!()","version()","version()","versions()","vivify()","wait()","wait()","warn_on_missing()","windows?()","with_environments()","write()"],"longSearchIndex":["cri","cri::commanddsl","r10k","r10k::cli","r10k::cli::deploy","r10k::cli::deploy::display","r10k::cli::deploy::environment","r10k::cli::deploy::module","r10k::cli::environment","r10k::cli::environment::deploy","r10k::cli::environment::list","r10k::cli::environment::stale","r10k::cli::module","r10k::cli::module::deploy","r10k::cli::module::list","r10k::cli::puppetfile","r10k::cli::puppetfile::check","r10k::cli::puppetfile::install","r10k::cli::puppetfile::purge","r10k::cli::synchronize","r10k::cli::version","r10k::deployment","r10k::deployment::basedir","r10k::deployment::config","r10k::deployment::config::configerror","r10k::deployment::config::loader","r10k::deployment::environment","r10k::deployment::source","r10k::environment","r10k::environment::base","r10k::environment::git","r10k::environment::svn","r10k::execution","r10k::executionfailure","r10k::git","r10k::git::alternates","r10k::git::cache","r10k::git::commit","r10k::git::giterror","r10k::git::head","r10k::git::ref","r10k::git::remotehead","r10k::git::repository","r10k::git::tag","r10k::git::unresolvablereferror","r10k::git::workingdir","r10k::instancecache","r10k::keyedfactory","r10k::keyedfactory::duplicateimplementationerror","r10k::keyedfactory::unknownimplementationerror","r10k::logging","r10k::module","r10k::module::base","r10k::module::forge","r10k::module::git","r10k::module::metadata","r10k::module::svn","r10k::modulerepository","r10k::modulerepository::forge","r10k::puppetfile","r10k::puppetfile::dsl","r10k::r10kerror","r10k::registry","r10k::svn","r10k::svn::remote","r10k::svn::workingdir","r10k::semver","r10k::settings","r10k::settings::container","r10k::settings::container::invalidkey","r10k::settings::mixin","r10k::settings::mixin::classmethods","r10k::settings::mixin::instancemethods","r10k::source","r10k::source::base","r10k::source::git","r10k::source::git::branchname","r10k::source::svn","r10k::source::svn::branchname","r10k::task","r10k::task::base","r10k::task::deployment","r10k::task::deployment::deployenvironments","r10k::task::deployment::deploymodules","r10k::task::deployment::display","r10k::task::deployment::purgeenvironments","r10k::task::deployment::sharedbehaviors","r10k::task::environment","r10k::task::environment::deploy","r10k::task::module","r10k::task::module::sync","r10k::task::puppetfile","r10k::task::puppetfile::deploymodules","r10k::task::puppetfile::purge","r10k::task::puppetfile::sync","r10k::taskrunner","r10k::util","r10k::util::coreext","r10k::util::coreext::hashext","r10k::util::coreext::hashext::symbolizekeys","r10k::util::platform","r10k::util::purgeable","r10k::util::subprocess","r10k::util::subprocess::io","r10k::util::subprocess::posix","r10k::util::subprocess::posix::io","r10k::util::subprocess::posix::runner","r10k::util::subprocess::result","r10k::util::subprocess::runner","r10k::util::subprocess::subprocesserror","r10k::util::subprocess::windows","r10k::util::subprocess::windows::io","r10k::util::subprocess::windows::runner","r10k::git::alternates#<<()","r10k::semver#<=>()","r10k::git::ref#==()","r10k::semver::[]()","r10k::settings::container#[]()","r10k::util::subprocess::result#[]()","r10k::settings::container#[]=()","r10k::task::deployment::sharedbehaviors#active_environments()","r10k::puppetfile#add_module()","r10k::settings::container#add_valid_key()","r10k::taskrunner#append_task()","r10k::deployment::config#apply_config_settings()","r10k::util::subprocess::posix::runner#attach_pipes()","r10k::module::metadata#attributes_from_hash()","r10k::source::git#branch_names()","r10k::source::svn#branch_names()","r10k::git::cache#branches()","r10k::svn::remote#branches()","r10k::git::cache#cached?()","r10k::task::deployment::deployenvironments#call()","r10k::task::deployment::deploymodules#call()","r10k::task::deployment::display#call()","r10k::task::deployment::purgeenvironments#call()","r10k::task::environment::deploy#call()","r10k::task::module::sync#call()","r10k::task::puppetfile::deploymodules#call()","r10k::task::puppetfile::purge#call()","r10k::task::puppetfile::sync#call()","r10k::git::workingdir#checkout()","r10k::svn::workingdir#checkout()","r10k::instancecache#clear!()","r10k::instancecache#clear!()","r10k::git::workingdir#clone()","r10k::git::workingdir#cloned?()","r10k::cli::command()","r10k::cli::deploy::command()","r10k::cli::deploy::display::command()","r10k::cli::deploy::environment::command()","r10k::cli::deploy::module::command()","r10k::cli::environment::command()","r10k::cli::environment::deploy::command()","r10k::cli::environment::list::command()","r10k::cli::environment::stale::command()","r10k::cli::module::command()","r10k::cli::module::deploy::command()","r10k::cli::module::list::command()","r10k::cli::puppetfile::command()","r10k::cli::puppetfile::check::command()","r10k::cli::puppetfile::install::command()","r10k::cli::puppetfile::purge::command()","r10k::cli::synchronize::command()","r10k::cli::version::command()","r10k::source::git::branchname#correct?()","r10k::util::subprocess::posix::runner#crashed?()","r10k::util::subprocess::runner#crashed?()","r10k::util::subprocess::windows::runner#crashed?()","r10k::git::workingdir#current()","r10k::source::git#current_contents()","r10k::source::svn#current_contents()","r10k::util::purgeable#current_contents()","r10k::module::forge#current_version()","r10k::settings::mixin::classmethods#def_setting_attr()","r10k::settings::mixin::classmethods#defaults()","r10k::deployment::basedir#desired_contents()","r10k::puppetfile#desired_contents()","r10k::source::git#desired_contents()","r10k::source::svn#desired_contents()","r10k::source::git::branchname#dirname()","r10k::source::svn::branchname#dirname()","r10k::deployment#environments()","r10k::source::base#environments()","r10k::source::git#environments()","r10k::source::svn#environments()","r10k::execution#execute()","r10k::util::subprocess#execute()","r10k::util::subprocess::posix::runner#execute_child()","r10k::util::subprocess::posix::runner#execute_parent()","r10k::git::workingdir#exist?()","r10k::module::forge#exist?()","r10k::module::metadata#exist?()","r10k::module::svn#exist?()","r10k::util::subprocess::posix::runner#exit_code()","r10k::util::subprocess::runner#exit_code()","r10k::util::subprocess::windows::runner#exit_code()","r10k::taskrunner#exit_value()","r10k::module::forge#expected_version()","r10k::source::factory()","r10k::util::subprocess::result#failed?()","r10k::git::repository#fetch()","r10k::git::commit#fetch?()","r10k::git::head#fetch?()","r10k::git::ref#fetch?()","r10k::git::tag#fetch?()","r10k::git::workingdir#fetch_from_cache()","r10k::source::git#fetch_remote()","r10k::deployment#fetch_sources()","r10k::semver::find_matching()","r10k::puppetfile::dsl#forge()","r10k::logging::formatter()","r10k::source::from_hash()","r10k::module::base#full_path()","r10k::git::cache::generate()","r10k::instancecache#generate()","r10k::instancecache#generate()","r10k::keyedfactory#generate()","r10k::source::generate()","r10k::source::git#generate_environments()","r10k::source::svn#generate_environments()","r10k::git::repository#git()","r10k::git::workingdir#git?()","r10k::module::forge::implement?()","r10k::module::git::implement?()","r10k::module::svn::implement?()","r10k::git::alternates#include?()","r10k::logging::included()","r10k::settings::mixin::included()","r10k::svn::workingdir#info()","r10k::taskrunner#insert_task_after()","r10k::git::ref#inspect()","r10k::semver#inspect()","r10k::module::forge#install()","r10k::module::git#install()","r10k::module::svn#install()","r10k::git::cache::instance_cache()","r10k::module::forge#insync?()","r10k::svn::workingdir#is_svn?()","r10k::modulerepository::forge#latest_version()","r10k::logging::level()","r10k::logging::level=()","r10k::logging::levels()","r10k::puppetfile#load()","r10k::puppetfile#load!()","r10k::deployment::load_config()","r10k::deployment::config#load_config()","r10k::deployment#load_environments()","r10k::task::puppetfile::deploymodules#load_modulemap!()","r10k::deployment#load_sources()","cri::commanddsl#logger()","r10k::logging#logger()","r10k::logging#logger_name()","r10k::deployment::basedir#managed_directory()","r10k::puppetfile#managed_directory()","r10k::source::git#managed_directory()","r10k::source::svn#managed_directory()","r10k::semver#matched_by?()","r10k::git::unresolvablereferror#message()","r10k::puppetfile::dsl#method_missing()","r10k::puppetfile::dsl#mod()","r10k::puppetfile::dsl#moduledir()","r10k::environment::git#modules()","r10k::environment::svn#modules()","r10k::git::workingdir#needs_checkout?()","r10k::git::workingdir#needs_fetch?()","r10k::deployment::new()","r10k::deployment::basedir::new()","r10k::deployment::config::new()","r10k::deployment::config::loader::new()","r10k::deployment::environment::new()","r10k::deployment::source::new()","r10k::environment::base::new()","r10k::environment::git::new()","r10k::environment::svn::new()","r10k::git::alternates::new()","r10k::git::cache::new()","r10k::git::commit::new()","r10k::git::head::new()","r10k::git::ref::new()","r10k::git::tag::new()","r10k::git::unresolvablereferror::new()","r10k::git::workingdir::new()","r10k::instancecache::new()","r10k::instancecache::new()","r10k::keyedfactory::new()","r10k::module::new()","r10k::module::forge::new()","r10k::module::git::new()","r10k::module::metadata::new()","r10k::module::svn::new()","r10k::modulerepository::forge::new()","r10k::puppetfile::new()","r10k::puppetfile::dsl::new()","r10k::r10kerror::new()","r10k::svn::remote::new()","r10k::svn::workingdir::new()","r10k::semver::new()","r10k::settings::container::new()","r10k::source::base::new()","r10k::source::git::new()","r10k::source::git::branchname::new()","r10k::source::svn::new()","r10k::source::svn::branchname::new()","r10k::task::deployment::deployenvironments::new()","r10k::task::deployment::deploymodules::new()","r10k::task::deployment::display::new()","r10k::task::deployment::purgeenvironments::new()","r10k::task::environment::deploy::new()","r10k::task::module::sync::new()","r10k::task::puppetfile::deploymodules::new()","r10k::task::puppetfile::purge::new()","r10k::task::puppetfile::sync::new()","r10k::taskrunner::new()","r10k::util::subprocess::new()","r10k::util::subprocess::posix::io::new()","r10k::util::subprocess::posix::runner::new()","r10k::util::subprocess::result::new()","r10k::util::subprocess::runner::new()","r10k::util::subprocess::subprocesserror::new()","r10k::util::subprocess::windows::io::new()","r10k::util::subprocess::windows::runner::new()","r10k::git::workingdir#outdated?()","r10k::logging::outputter()","r10k::module::forge#owner()","r10k::logging::parse_level()","r10k::module::git#parse_options()","r10k::module::svn#parse_options()","r10k::git::cache#path()","r10k::util::purgeable#pending_contents()","r10k::util::platform::platform()","r10k::module::forge#pmt()","r10k::deployment::config::loader#populate_loadpath()","r10k::semver::pre()","r10k::deployment#preload!()","r10k::source::base#preload!()","r10k::source::git#preload!()","r10k::taskrunner#prepend_task()","r10k::puppetfile#puppetfile_contents()","r10k::util::purgeable#purge!()","r10k::git::alternates#read()","r10k::module::metadata#read()","r10k::git::workingdir#ref_needs_fetch?()","r10k::keyedfactory#register()","r10k::module::register()","r10k::source::register()","r10k::module::forge#reinstall()","r10k::module::svn#reinstall()","r10k::git::repository#remotes()","r10k::git::workingdir#remove_tags()","r10k::git::ref#resolvable?()","r10k::git::repository#resolve_commit()","r10k::git::repository#resolve_head()","r10k::git::repository#resolve_ref()","r10k::git::repository#resolve_remote_head()","r10k::git::workingdir#resolve_remote_head()","r10k::git::repository#resolve_tag()","r10k::keyedfactory#retrieve()","r10k::source::retrieve()","r10k::git::repository#rev_parse()","r10k::svn::workingdir#revision()","r10k::svn::workingdir#root()","r10k::taskrunner#run()","r10k::util::subprocess::posix::runner#run()","r10k::util::subprocess::runner#run()","r10k::util::subprocess::windows::runner#run()","r10k::util::subprocess::runner()","r10k::git::cache#sanitized_dirname()","r10k::deployment::config::loader#search()","r10k::puppetfile#set_forge()","r10k::puppetfile#set_moduledir()","r10k::module::forge#set_version_from_forge()","r10k::deployment::config#setting()","r10k::settings::mixin::classmethods#settings()","r10k::settings::mixin::instancemethods#settings()","r10k::git::ref#sha1()","r10k::git::remotehead#sha1()","r10k::deployment#sources()","r10k::util::purgeable#stale_contents()","r10k::util::subprocess::posix::runner#start()","r10k::util::subprocess::runner#start()","r10k::module::forge#status()","r10k::module::git#status()","r10k::module::svn#status()","r10k::util::subprocess::posix::runner#status_pipe()","r10k::taskrunner#succeeded?()","r10k::util::subprocess::result#success?()","r10k::svn::remote#svn()","r10k::svn::workingdir#svn()","r10k::util::coreext::hashext::symbolizekeys#symbolize_keys!()","r10k::environment::base#sync()","r10k::environment::git#sync()","r10k::environment::svn#sync()","r10k::git::cache#sync()","r10k::git::workingdir#sync()","r10k::module::forge#sync()","r10k::module::git#sync()","r10k::module::svn#sync()","r10k::git::cache#sync!()","r10k::environment::git#sync_modules()","r10k::environment::svn#sync_modules()","r10k::git::repository#tags()","r10k::git::alternates#to_a()","r10k::git::ref#to_s()","r10k::semver#to_s()","r10k::util::subprocess::subprocesserror#to_s()","r10k::svn::remote#trunk()","r10k::module::forge#uninstall()","r10k::module::git#uninstall()","r10k::module::svn#uninstall()","r10k::git::workingdir#update()","r10k::module::svn#update()","r10k::svn::workingdir#update()","r10k::git::workingdir#update_remotes()","r10k::git::workingdir#update_remotes?()","r10k::module::forge#upgrade()","r10k::svn::workingdir#url()","r10k::semver::valid?()","r10k::source::git::branchname#valid?()","r10k::settings::container#valid_key?()","r10k::source::git::branchname#validate?()","r10k::settings::container#validate_key!()","r10k::module::forge#version()","r10k::module::git#version()","r10k::modulerepository::forge#versions()","r10k::deployment::source::vivify()","r10k::util::subprocess::posix::runner#wait()","r10k::util::subprocess::runner#wait()","r10k::task::puppetfile::deploymodules#warn_on_missing()","r10k::util::platform::windows?()","r10k::task::deployment::sharedbehaviors#with_environments()","r10k::git::alternates#write()"],"info":[["Cri","","Cri.html","",""],["Cri::CommandDSL","","Cri/CommandDSL.html","",""],["R10K","","R10K.html","","<p>We need to subclass Numeric to force range comparisons not to try to\niterate over SemVer and instead …\n"],["R10K::CLI","","R10K/CLI.html","",""],["R10K::CLI::Deploy","","R10K/CLI/Deploy.html","",""],["R10K::CLI::Deploy::Display","","R10K/CLI/Deploy/Display.html","",""],["R10K::CLI::Deploy::Environment","","R10K/CLI/Deploy/Environment.html","",""],["R10K::CLI::Deploy::Module","","R10K/CLI/Deploy/Module.html","",""],["R10K::CLI::Environment","","R10K/CLI/Environment.html","",""],["R10K::CLI::Environment::Deploy","","R10K/CLI/Environment/Deploy.html","",""],["R10K::CLI::Environment::List","","R10K/CLI/Environment/List.html","",""],["R10K::CLI::Environment::Stale","","R10K/CLI/Environment/Stale.html","",""],["R10K::CLI::Module","","R10K/CLI/Module.html","",""],["R10K::CLI::Module::Deploy","","R10K/CLI/Module/Deploy.html","",""],["R10K::CLI::Module::List","","R10K/CLI/Module/List.html","",""],["R10K::CLI::Puppetfile","","R10K/CLI/Puppetfile.html","",""],["R10K::CLI::Puppetfile::Check","","R10K/CLI/Puppetfile/Check.html","",""],["R10K::CLI::Puppetfile::Install","","R10K/CLI/Puppetfile/Install.html","",""],["R10K::CLI::Puppetfile::Purge","","R10K/CLI/Puppetfile/Purge.html","",""],["R10K::CLI::Synchronize","","R10K/CLI/Synchronize.html","",""],["R10K::CLI::Version","","R10K/CLI/Version.html","",""],["R10K::Deployment","","R10K/Deployment.html","",""],["R10K::Deployment::Basedir","","R10K/Deployment/Basedir.html","","<p>Represents a directory containing environments @api private\n"],["R10K::Deployment::Config","","R10K/Deployment/Config.html","",""],["R10K::Deployment::Config::ConfigError","","R10K/Deployment/Config/ConfigError.html","",""],["R10K::Deployment::Config::Loader","","R10K/Deployment/Config/Loader.html","",""],["R10K::Deployment::Environment","","R10K/Deployment/Environment.html","",""],["R10K::Deployment::Source","","R10K/Deployment/Source.html","",""],["R10K::Environment","","R10K/Environment.html","",""],["R10K::Environment::Base","","R10K/Environment/Base.html","","<p>This class defines a common interface for environment implementations.\n<p>@since 1.3.0\n"],["R10K::Environment::Git","","R10K/Environment/Git.html","","<p>This class implements an environment based on a Git branch.\n<p>@since 1.3.0\n"],["R10K::Environment::SVN","","R10K/Environment/SVN.html","","<p>This class implements an environment based on an SVN branch.\n<p>@since 1.3.0\n"],["R10K::Execution","","R10K/Execution.html","",""],["R10K::ExecutionFailure","","R10K/ExecutionFailure.html","",""],["R10K::Git","","R10K/Git.html","",""],["R10K::Git::Alternates","","R10K/Git/Alternates.html","","<p>Manage `$GIT_DIR/objects/info/alternates`\n<p>@see man gitrepository-layout(5)\n"],["R10K::Git::Cache","","R10K/Git/Cache.html","","<p>Mirror a git repository for use shared git object repositories\n<p>@see man git-clone(1)\n"],["R10K::Git::Commit","","R10K/Git/Commit.html","","<p>commit: A 40-byte hex representation of a SHA1 referencing a specific\ncommit @see www.kernel.org/pub/software/scm/git/docs/gitglossary.html …\n"],["R10K::Git::GitError","","R10K/Git/GitError.html","",""],["R10K::Git::Head","","R10K/Git/Head.html","","<p>head: A named reference to the commit at the tip of a branch. Heads are\nstored in a file in $GIT_DIR/refs/heads/ …\n"],["R10K::Git::Ref","","R10K/Git/Ref.html","","<p>ref: A 40-byte hex representation of a SHA1 or a name that denotes a\nparticular object. They may be stored …\n"],["R10K::Git::RemoteHead","","R10K/Git/RemoteHead.html","","<p>@api private\n"],["R10K::Git::Repository","","R10K/Git/Repository.html","","<p>Define an abstract base class for git repositories.\n"],["R10K::Git::Tag","","R10K/Git/Tag.html","","<p>tag: A ref under refs/tags/ namespace that points to an object of an\narbitrary type (typically a tag …\n"],["R10K::Git::UnresolvableRefError","","R10K/Git/UnresolvableRefError.html","",""],["R10K::Git::WorkingDir","","R10K/Git/WorkingDir.html","","<p>Implements sparse git repositories with shared objects\n<p>Working directory instances use the git alternatives …\n"],["R10K::InstanceCache","","R10K/InstanceCache.html","","<p>This class implements a generic object memoization container. It caches new\nobjects and returns cached …\n"],["R10K::KeyedFactory","","R10K/KeyedFactory.html","","<p>This implements a factory by storing classes indexed with a given key and\ncreates objects based on that …\n"],["R10K::KeyedFactory::DuplicateImplementationError","","R10K/KeyedFactory/DuplicateImplementationError.html","",""],["R10K::KeyedFactory::UnknownImplementationError","","R10K/KeyedFactory/UnknownImplementationError.html","",""],["R10K::Logging","","R10K/Logging.html","",""],["R10K::Module","","R10K/Module.html","",""],["R10K::Module::Base","","R10K/Module/Base.html","",""],["R10K::Module::Forge","","R10K/Module/Forge.html","",""],["R10K::Module::Git","","R10K/Module/Git.html","",""],["R10K::Module::Metadata","","R10K/Module/Metadata.html","",""],["R10K::Module::SVN","","R10K/Module/SVN.html","",""],["R10K::ModuleRepository","","R10K/ModuleRepository.html","","<p>Locations that can be queried for remote module metadata\n"],["R10K::ModuleRepository::Forge","","R10K/ModuleRepository/Forge.html","",""],["R10K::Puppetfile","","R10K/Puppetfile.html","",""],["R10K::Puppetfile::DSL","","R10K/Puppetfile/DSL.html","",""],["R10K::R10KError","","R10K/R10KError.html","","<p>An error class that accepts an optional hash.\n<p>@overload initialize(mesg)\n\n<pre>@param mesg [String] The exception ...</pre>\n"],["R10K::Registry","","R10K/Registry.html","","<p>This class implements a generic object memoization container. It caches new\nobjects and returns cached …\n"],["R10K::SVN","","R10K/SVN.html","",""],["R10K::SVN::Remote","","R10K/SVN/Remote.html","",""],["R10K::SVN::WorkingDir","","R10K/SVN/WorkingDir.html","",""],["R10K::SemVer","","R10K/SemVer.html","",""],["R10K::Settings","","R10K/Settings.html","",""],["R10K::Settings::Container","","R10K/Settings/Container.html","","<p>Defines a collection for application settings\n<p>This implements a hierarchical interface to application …\n"],["R10K::Settings::Container::InvalidKey","","R10K/Settings/Container/InvalidKey.html","","<p>@api private\n"],["R10K::Settings::Mixin","","R10K/Settings/Mixin.html","",""],["R10K::Settings::Mixin::ClassMethods","","R10K/Settings/Mixin/ClassMethods.html","",""],["R10K::Settings::Mixin::InstanceMethods","","R10K/Settings/Mixin/InstanceMethods.html","",""],["R10K::Source","","R10K/Source.html","",""],["R10K::Source::Base","","R10K/Source/Base.html","","<p>This class defines a common interface for source implementations.\n<p>@since 1.3.0\n"],["R10K::Source::Git","","R10K/Source/Git.html","","<p>This class implements a source for Git environments.\n<p>A Git source generates environments by locally caching …\n"],["R10K::Source::Git::BranchName","","R10K/Source/Git/BranchName.html","","<p>@api private\n"],["R10K::Source::SVN","","R10K/Source/SVN.html","","<p>This class implements a source for SVN environments.\n<p>An SVN source generates environments by enumerating …\n"],["R10K::Source::SVN::BranchName","","R10K/Source/SVN/BranchName.html","","<p>@api private @todo respect environment name corrections\n"],["R10K::Task","","R10K/Task.html","",""],["R10K::Task::Base","","R10K/Task/Base.html","",""],["R10K::Task::Deployment","","R10K/Task/Deployment.html","",""],["R10K::Task::Deployment::DeployEnvironments","","R10K/Task/Deployment/DeployEnvironments.html","",""],["R10K::Task::Deployment::DeployModules","","R10K/Task/Deployment/DeployModules.html","",""],["R10K::Task::Deployment::Display","","R10K/Task/Deployment/Display.html","",""],["R10K::Task::Deployment::PurgeEnvironments","","R10K/Task/Deployment/PurgeEnvironments.html","",""],["R10K::Task::Deployment::SharedBehaviors","","R10K/Task/Deployment/SharedBehaviors.html","",""],["R10K::Task::Environment","","R10K/Task/Environment.html","",""],["R10K::Task::Environment::Deploy","","R10K/Task/Environment/Deploy.html","",""],["R10K::Task::Module","","R10K/Task/Module.html","",""],["R10K::Task::Module::Sync","","R10K/Task/Module/Sync.html","",""],["R10K::Task::Puppetfile","","R10K/Task/Puppetfile.html","",""],["R10K::Task::Puppetfile::DeployModules","","R10K/Task/Puppetfile/DeployModules.html","",""],["R10K::Task::Puppetfile::Purge","","R10K/Task/Puppetfile/Purge.html","",""],["R10K::Task::Puppetfile::Sync","","R10K/Task/Puppetfile/Sync.html","",""],["R10K::TaskRunner","","R10K/TaskRunner.html","",""],["R10K::Util","","R10K/Util.html","",""],["R10K::Util::CoreExt","","R10K/Util/CoreExt.html","",""],["R10K::Util::CoreExt::HashExt","","R10K/Util/CoreExt/HashExt.html","",""],["R10K::Util::CoreExt::HashExt::SymbolizeKeys","","R10K/Util/CoreExt/HashExt/SymbolizeKeys.html","",""],["R10K::Util::Platform","","R10K/Util/Platform.html","",""],["R10K::Util::Purgeable","","R10K/Util/Purgeable.html","",""],["R10K::Util::Subprocess","","R10K/Util/Subprocess.html","","<p>The subprocess namespace implements an interface similar to childprocess.\nThe interface has been simplified …\n"],["R10K::Util::Subprocess::IO","","R10K/Util/Subprocess/IO.html","",""],["R10K::Util::Subprocess::POSIX","","R10K/Util/Subprocess/POSIX.html","",""],["R10K::Util::Subprocess::POSIX::IO","","R10K/Util/Subprocess/POSIX/IO.html","",""],["R10K::Util::Subprocess::POSIX::Runner","","R10K/Util/Subprocess/POSIX/Runner.html","","<p>Implement a POSIX command runner by using fork/exec.\n<p>This implementation is optimized to run commands …\n"],["R10K::Util::Subprocess::Result","","R10K/Util/Subprocess/Result.html","","<p>@api private\n"],["R10K::Util::Subprocess::Runner","","R10K/Util/Subprocess/Runner.html","","<p>Define an abstract interface for external command runners.\n<p>@api private\n"],["R10K::Util::Subprocess::SubprocessError","","R10K/Util/Subprocess/SubprocessError.html","",""],["R10K::Util::Subprocess::Windows","","R10K/Util/Subprocess/Windows.html","",""],["R10K::Util::Subprocess::Windows::IO","","R10K/Util/Subprocess/Windows/IO.html","",""],["R10K::Util::Subprocess::Windows::Runner","","R10K/Util/Subprocess/Windows/Runner.html","","<p>Run processes on Windows.\n<p>This implementation relies on Open3.capture3 to run commands and capture\nresults. …\n"],["<<","R10K::Git::Alternates","R10K/Git/Alternates.html#method-i-3C-3C","(path)",""],["<=>","R10K::SemVer","R10K/SemVer.html#method-i-3C-3D-3E","(other)",""],["==","R10K::Git::Ref","R10K/Git/Ref.html#method-i-3D-3D","(other)",""],["[]","R10K::SemVer","R10K/SemVer.html#method-c-5B-5D","(range)",""],["[]","R10K::Settings::Container","R10K/Settings/Container.html#method-i-5B-5D","(key)","<p>Look up a value in the container. The lookup checks the current container,\nand then falls back to the …\n"],["[]","R10K::Util::Subprocess::Result","R10K/Util/Subprocess/Result.html#method-i-5B-5D","(field)",""],["[]=","R10K::Settings::Container","R10K/Settings/Container.html#method-i-5B-5D-3D","(key, value)","<p>Set a value on the container\n<p>@param key [Symbol] The lookup key @param value [Object] The value to store\n…\n"],["active_environments","R10K::Task::Deployment::SharedBehaviors","R10K/Task/Deployment/SharedBehaviors.html#method-i-active_environments","(names)",""],["add_module","R10K::Puppetfile","R10K/Puppetfile.html#method-i-add_module","(name, args)","<p>@param [String] name @param [*Object] args\n"],["add_valid_key","R10K::Settings::Container","R10K/Settings/Container.html#method-i-add_valid_key","(key)","<p>Define a valid container key\n<p>@note This should only be used by {#R10K::Settings::ClassSettings}\n<p>@param …\n"],["append_task","R10K::TaskRunner","R10K/TaskRunner.html#method-i-append_task","(task)",""],["apply_config_settings","R10K::Deployment::Config","R10K/Deployment/Config.html#method-i-apply_config_settings","()","<p>Apply config settings to the relevant classes after a config has been\nloaded.\n<p>@note this is hack. And …\n"],["attach_pipes","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-attach_pipes","()",""],["attributes_from_hash","R10K::Module::Metadata","R10K/Module/Metadata.html#method-i-attributes_from_hash","(json)",""],["branch_names","R10K::Source::Git","R10K/Source/Git.html#method-i-branch_names","()",""],["branch_names","R10K::Source::SVN","R10K/Source/SVN.html#method-i-branch_names","()",""],["branches","R10K::Git::Cache","R10K/Git/Cache.html#method-i-branches","()","<p>@return [Array&lt;String&gt;] A list the branches for the git repository\n"],["branches","R10K::SVN::Remote","R10K/SVN/Remote.html#method-i-branches","()","<p>@todo gracefully handle cases where no branches exist\n"],["cached?","R10K::Git::Cache","R10K/Git/Cache.html#method-i-cached-3F","()","<p>@return [true, false] If the repository has been locally cached\n"],["call","R10K::Task::Deployment::DeployEnvironments","R10K/Task/Deployment/DeployEnvironments.html#method-i-call","()",""],["call","R10K::Task::Deployment::DeployModules","R10K/Task/Deployment/DeployModules.html#method-i-call","()",""],["call","R10K::Task::Deployment::Display","R10K/Task/Deployment/Display.html#method-i-call","()",""],["call","R10K::Task::Deployment::PurgeEnvironments","R10K/Task/Deployment/PurgeEnvironments.html#method-i-call","()",""],["call","R10K::Task::Environment::Deploy","R10K/Task/Environment/Deploy.html#method-i-call","()",""],["call","R10K::Task::Module::Sync","R10K/Task/Module/Sync.html#method-i-call","()",""],["call","R10K::Task::Puppetfile::DeployModules","R10K/Task/Puppetfile/DeployModules.html#method-i-call","()",""],["call","R10K::Task::Puppetfile::Purge","R10K/Task/Puppetfile/Purge.html#method-i-call","()",""],["call","R10K::Task::Puppetfile::Sync","R10K/Task/Puppetfile/Sync.html#method-i-call","()",""],["checkout","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-checkout","(ref)","<p>check out the given ref\n<p>@param ref [R10K::Git::Ref] The git reference to check out\n"],["checkout","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-checkout","(url, revision = nil)",""],["clear!","R10K::InstanceCache","R10K/InstanceCache.html#method-i-clear-21","()","<p>Clear all memoized objects\n"],["clear!","R10K::InstanceCache","R10K/InstanceCache.html#method-i-clear-21","()","<p>Clear all memoized objects\n"],["clone","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-clone","()","<p>Perform a non-bare clone of a git repository.\n"],["cloned?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-cloned-3F","()","<p>Determine if repo has been cloned into a specific dir\n<p>@return [true, false] If the repo has already been …\n"],["command","R10K::CLI","R10K/CLI.html#method-c-command","()",""],["command","R10K::CLI::Deploy","R10K/CLI/Deploy.html#method-c-command","()",""],["command","R10K::CLI::Deploy::Display","R10K/CLI/Deploy/Display.html#method-c-command","()",""],["command","R10K::CLI::Deploy::Environment","R10K/CLI/Deploy/Environment.html#method-c-command","()",""],["command","R10K::CLI::Deploy::Module","R10K/CLI/Deploy/Module.html#method-c-command","()",""],["command","R10K::CLI::Environment","R10K/CLI/Environment.html#method-c-command","()",""],["command","R10K::CLI::Environment::Deploy","R10K/CLI/Environment/Deploy.html#method-c-command","()",""],["command","R10K::CLI::Environment::List","R10K/CLI/Environment/List.html#method-c-command","()",""],["command","R10K::CLI::Environment::Stale","R10K/CLI/Environment/Stale.html#method-c-command","()",""],["command","R10K::CLI::Module","R10K/CLI/Module.html#method-c-command","()",""],["command","R10K::CLI::Module::Deploy","R10K/CLI/Module/Deploy.html#method-c-command","()",""],["command","R10K::CLI::Module::List","R10K/CLI/Module/List.html#method-c-command","()",""],["command","R10K::CLI::Puppetfile","R10K/CLI/Puppetfile.html#method-c-command","()",""],["command","R10K::CLI::Puppetfile::Check","R10K/CLI/Puppetfile/Check.html#method-c-command","()",""],["command","R10K::CLI::Puppetfile::Install","R10K/CLI/Puppetfile/Install.html#method-c-command","()",""],["command","R10K::CLI::Puppetfile::Purge","R10K/CLI/Puppetfile/Purge.html#method-c-command","()",""],["command","R10K::CLI::Synchronize","R10K/CLI/Synchronize.html#method-c-command","()",""],["command","R10K::CLI::Version","R10K/CLI/Version.html#method-c-command","()",""],["correct?","R10K::Source::Git::BranchName","R10K/Source/Git/BranchName.html#method-i-correct-3F","()",""],["crashed?","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-crashed-3F","()",""],["crashed?","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-i-crashed-3F","()","<p>Did the given process exit with a non-zero exit code?\n"],["crashed?","R10K::Util::Subprocess::Windows::Runner","R10K/Util/Subprocess/Windows/Runner.html#method-i-crashed-3F","()",""],["current","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-current","()","<p>The currently checked out HEAD\n<p>@return [R10k::Git::Head]\n"],["current_contents","R10K::Source::Git","R10K/Source/Git.html#method-i-current_contents","()",""],["current_contents","R10K::Source::SVN","R10K/Source/SVN.html#method-i-current_contents","()",""],["current_contents","R10K::Util::Purgeable","R10K/Util/Purgeable.html#method-i-current_contents","()","<p>@return [Array&lt;String&gt;] The present directory entries in\n`self.managed_directory`\n"],["current_version","R10K::Module::Forge","R10K/Module/Forge.html#method-i-current_version","()","<p>@return [R10K::SemVer] The version of the currently installed module\n"],["def_setting_attr","R10K::Settings::Mixin::ClassMethods","R10K/Settings/Mixin/ClassMethods.html#method-i-def_setting_attr","(key, default = nil)","<p>Define a setting and optional default on the extending class.\n<p>@param key [Symbol] @param default [Object] …\n"],["defaults","R10K::Settings::Mixin::ClassMethods","R10K/Settings/Mixin/ClassMethods.html#method-i-defaults","()","<p>A singleton settings container for storing immutable default configuration\non the extending class.\n<p>@return …\n"],["desired_contents","R10K::Deployment::Basedir","R10K/Deployment/Basedir.html#method-i-desired_contents","()","<p>List all environments that should exist in this basedir @note This\nimplements a required method for the …\n"],["desired_contents","R10K::Puppetfile","R10K/Puppetfile.html#method-i-desired_contents","()","<p>List all modules that should exist in the module directory @note This\nimplements a required method for …\n"],["desired_contents","R10K::Source::Git","R10K/Source/Git.html#method-i-desired_contents","()","<p>List all environments that should exist in the basedir for this source\n@note This implements a required …\n"],["desired_contents","R10K::Source::SVN","R10K/Source/SVN.html#method-i-desired_contents","()","<p>List all environments that should exist in the basedir for this source\n@note This implements a required …\n"],["dirname","R10K::Source::Git::BranchName","R10K/Source/Git/BranchName.html#method-i-dirname","()",""],["dirname","R10K::Source::SVN::BranchName","R10K/Source/SVN/BranchName.html#method-i-dirname","()",""],["environments","R10K::Deployment","R10K/Deployment.html#method-i-environments","()","<p>Lazily load all environments\n<p>This instantiates the @_environments instance variable, but should not be …\n"],["environments","R10K::Source::Base","R10K/Source/Base.html#method-i-environments","()","<p>Enumerate the environments associated with this SVN source.\n<p>@api public @abstract @return [Array&lt;R10K::Environment::Base&gt;] …\n"],["environments","R10K::Source::Git","R10K/Source/Git.html#method-i-environments","()","<p>Load the git remote and create environments for each branch. If the cache\nhas not been fetched, this …\n"],["environments","R10K::Source::SVN","R10K/Source/SVN.html#method-i-environments","()","<p>Enumerate the environments associated with this SVN source.\n<p>@return [Array&lt;R10K::Environment::SVN&gt;] …\n"],["execute","R10K::Execution","R10K/Execution.html#method-i-execute","(cmd, opts = {})","<p>Execute a command and return stdout\n<p>@params [String] cmd @params [Hash] opts\n<p>@option opts [String] :event …\n"],["execute","R10K::Util::Subprocess","R10K/Util/Subprocess.html#method-i-execute","()","<p>Execute the given command and return the result of evaluation.\n<p>@api public @raise [R10K::Util::Subprocess::SubprocessError] …\n"],["execute_child","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-execute_child","(exec_w)",""],["execute_parent","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-execute_parent","(exec_r)",""],["exist?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-exist-3F","()","<p>Does a directory exist where we expect a working dir to be? @return [true,\nfalse]\n"],["exist?","R10K::Module::Forge","R10K/Module/Forge.html#method-i-exist-3F","()",""],["exist?","R10K::Module::Metadata","R10K/Module/Metadata.html#method-i-exist-3F","()","<p>Does the metadata file itself exist?\n"],["exist?","R10K::Module::SVN","R10K/Module/SVN.html#method-i-exist-3F","()",""],["exit_code","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-exit_code","()",""],["exit_code","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-i-exit_code","()","<p>@return [Integer] The exit status of the given process.\n"],["exit_code","R10K::Util::Subprocess::Windows::Runner","R10K/Util/Subprocess/Windows/Runner.html#method-i-exit_code","()",""],["exit_value","R10K::TaskRunner","R10K/TaskRunner.html#method-i-exit_value","()",""],["expected_version","R10K::Module::Forge","R10K/Module/Forge.html#method-i-expected_version","()","<p>@return [R10K::SemVer] The expected version that the module\n"],["factory","R10K::Source","R10K/Source.html#method-c-factory","()",""],["failed?","R10K::Util::Subprocess::Result","R10K/Util/Subprocess/Result.html#method-i-failed-3F","()",""],["fetch","R10K::Git::Repository","R10K/Git/Repository.html#method-i-fetch","(remote = 'origin')","<p>Fetch objects and refs from the given git remote\n<p>@param remote [#to_s] The remote name to fetch from\n"],["fetch?","R10K::Git::Commit","R10K/Git/Commit.html#method-i-fetch-3F","()",""],["fetch?","R10K::Git::Head","R10K/Git/Head.html#method-i-fetch-3F","()","<p>If we are tracking a branch, we should always try to fetch a newer version\nof that branch.\n"],["fetch?","R10K::Git::Ref","R10K/Git/Ref.html#method-i-fetch-3F","()","<p>Should we try to fetch this ref?\n<p>Since we don&#39;t know the type of this ref, we have to assume that …\n"],["fetch?","R10K::Git::Tag","R10K/Git/Tag.html#method-i-fetch-3F","()",""],["fetch_from_cache","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-fetch_from_cache","()",""],["fetch_remote","R10K::Source::Git","R10K/Source/Git.html#method-i-fetch_remote","()",""],["fetch_sources","R10K::Deployment","R10K/Deployment.html#method-i-fetch_sources","()",""],["find_matching","R10K::SemVer","R10K/SemVer.html#method-c-find_matching","(pattern, versions)",""],["forge","R10K::Puppetfile::DSL","R10K/Puppetfile/DSL.html#method-i-forge","(location)",""],["formatter","R10K::Logging","R10K/Logging.html#method-c-formatter","()",""],["from_hash","R10K::Source","R10K/Source.html#method-c-from_hash","(name, hash)",""],["full_path","R10K::Module::Base","R10K/Module/Base.html#method-i-full_path","()","<p>@return [String] The full filesystem path to the module.\n"],["generate","R10K::Git::Cache","R10K/Git/Cache.html#method-c-generate","(remote)","<p>Generate a new instance with the given remote or return an existing object\nwith the given remote. This …\n"],["generate","R10K::InstanceCache","R10K/InstanceCache.html#method-i-generate","(*args)","<p>Create a new object, or return a memoized object.\n<p>@param args [*Object] The arguments to pass to the initialize …\n"],["generate","R10K::InstanceCache","R10K/InstanceCache.html#method-i-generate","(*args)","<p>Create a new object, or return a memoized object.\n<p>@param args [*Object] The arguments to pass to the initialize …\n"],["generate","R10K::KeyedFactory","R10K/KeyedFactory.html#method-i-generate","(key, *args)",""],["generate","R10K::Source","R10K/Source.html#method-c-generate","(type, basedir, name, options = {})",""],["generate_environments","R10K::Source::Git","R10K/Source/Git.html#method-i-generate_environments","()",""],["generate_environments","R10K::Source::SVN","R10K/Source/SVN.html#method-i-generate_environments","()","<p>Generate a list of currently available SVN environments\n<p>@todo respect environment name corrections\n<p>@api …\n"],["git","R10K::Git::Repository","R10K/Git/Repository.html#method-i-git","(cmd, opts = {})","<p>Wrap git commands\n<p>@param cmd [Array&lt;String&gt;] cmd The arguments for the git prompt\n@param opts [Hash] …\n"],["git?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-git-3F","()",""],["implement?","R10K::Module::Forge","R10K/Module/Forge.html#method-c-implement-3F","(name, args)",""],["implement?","R10K::Module::Git","R10K/Module/Git.html#method-c-implement-3F","(name, args)",""],["implement?","R10K::Module::SVN","R10K/Module/SVN.html#method-c-implement-3F","(name, args)",""],["include?","R10K::Git::Alternates","R10K/Git/Alternates.html#method-i-include-3F","(path)",""],["included","R10K::Logging","R10K/Logging.html#method-c-included","(klass)",""],["included","R10K::Settings::Mixin","R10K/Settings/Mixin.html#method-c-included","(klass)",""],["info","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-info","()",""],["insert_task_after","R10K::TaskRunner","R10K/TaskRunner.html#method-i-insert_task_after","(task_index, new_task)","<p>@param [R10K::Task] task_index The task to insert the task after @param\n[R10K::Task] new_task The task …\n"],["inspect","R10K::Git::Ref","R10K/Git/Ref.html#method-i-inspect","()",""],["inspect","R10K::SemVer","R10K/SemVer.html#method-i-inspect","()",""],["install","R10K::Module::Forge","R10K/Module/Forge.html#method-i-install","()",""],["install","R10K::Module::Git","R10K/Module/Git.html#method-i-install","()",""],["install","R10K::Module::SVN","R10K/Module/SVN.html#method-i-install","()",""],["instance_cache","R10K::Git::Cache","R10K/Git/Cache.html#method-c-instance_cache","()","<p>Lazily construct an instance cache for R10K::Git::Cache objects @api\nprivate\n"],["insync?","R10K::Module::Forge","R10K/Module/Forge.html#method-i-insync-3F","()",""],["is_svn?","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-is_svn-3F","()",""],["latest_version","R10K::ModuleRepository::Forge","R10K/ModuleRepository/Forge.html#method-i-latest_version","(module_name)","<p>Query for the newest published version of a module\n<p>@example\n\n<pre>forge = R10K::ModuleRepository::Forge.new\nforge.latest_version(&#39;adrien/boolean&#39;) ...</pre>\n"],["level","R10K::Logging","R10K/Logging.html#method-c-level","()",""],["level=","R10K::Logging","R10K/Logging.html#method-c-level-3D","(val)",""],["levels","R10K::Logging","R10K/Logging.html#method-c-levels","()",""],["load","R10K::Puppetfile","R10K/Puppetfile.html#method-i-load","()",""],["load!","R10K::Puppetfile","R10K/Puppetfile.html#method-i-load-21","()",""],["load_config","R10K::Deployment","R10K/Deployment.html#method-c-load_config","(path)","<p>Generate a deployment object based on a config\n<p>@param path [String] The path to the deployment config …\n"],["load_config","R10K::Deployment::Config","R10K/Deployment/Config.html#method-i-load_config","()","<p>Load and store a config file, and set relevant options\n<p>@param [String] configfile The path to the YAML …\n"],["load_environments","R10K::Deployment","R10K/Deployment.html#method-i-load_environments","()",""],["load_modulemap!","R10K::Task::Puppetfile::DeployModules","R10K/Task/Puppetfile/DeployModules.html#method-i-load_modulemap-21","()",""],["load_sources","R10K::Deployment","R10K/Deployment.html#method-i-load_sources","()",""],["logger","Cri::CommandDSL","Cri/CommandDSL.html#method-i-logger","()",""],["logger","R10K::Logging","R10K/Logging.html#method-i-logger","()",""],["logger_name","R10K::Logging","R10K/Logging.html#method-i-logger_name","()",""],["managed_directory","R10K::Deployment::Basedir","R10K/Deployment/Basedir.html#method-i-managed_directory","()","<p>Return the path of the basedir @note This implements a required method for\nthe Purgeable mixin @return …\n"],["managed_directory","R10K::Puppetfile","R10K/Puppetfile.html#method-i-managed_directory","()",""],["managed_directory","R10K::Source::Git","R10K/Source/Git.html#method-i-managed_directory","()",""],["managed_directory","R10K::Source::SVN","R10K/Source/SVN.html#method-i-managed_directory","()",""],["matched_by?","R10K::SemVer","R10K/SemVer.html#method-i-matched_by-3F","(pattern)",""],["message","R10K::Git::UnresolvableRefError","R10K/Git/UnresolvableRefError.html#method-i-message","()","<p>Print a friendly error message if an object hash is given as the message\n"],["method_missing","R10K::Puppetfile::DSL","R10K/Puppetfile/DSL.html#method-i-method_missing","(method, *args)",""],["mod","R10K::Puppetfile::DSL","R10K/Puppetfile/DSL.html#method-i-mod","(name, args = [])",""],["moduledir","R10K::Puppetfile::DSL","R10K/Puppetfile/DSL.html#method-i-moduledir","(location)",""],["modules","R10K::Environment::Git","R10K/Environment/Git.html#method-i-modules","()","<p>@return [Array&lt;R10K::Module::Base&gt;] All modules defined in the\nPuppetfile\n\n<pre>associated with this environment.</pre>\n"],["modules","R10K::Environment::SVN","R10K/Environment/SVN.html#method-i-modules","()","<p>@return [Array&lt;R10K::Module::Base&gt;] All modules defined in the\nPuppetfile\n\n<pre>associated with this environment.</pre>\n"],["needs_checkout?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-needs_checkout-3F","()","<p>Does the expected ref match the actual ref?\n"],["needs_fetch?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-needs_fetch-3F","()",""],["new","R10K::Deployment","R10K/Deployment.html#method-c-new","(config)",""],["new","R10K::Deployment::Basedir","R10K/Deployment/Basedir.html#method-c-new","(path,deployment)",""],["new","R10K::Deployment::Config","R10K/Deployment/Config.html#method-c-new","(configfile)",""],["new","R10K::Deployment::Config::Loader","R10K/Deployment/Config/Loader.html#method-c-new","()","<p>Search for a deployment configuration file (r10k.yaml) in all parent\ndirectories and in /etc/r10k.yaml …\n"],["new","R10K::Deployment::Environment","R10K/Deployment/Environment.html#method-c-new","(ref, remote, basedir, dirname = nil, source_name = \"\")","<p>@param [String] ref @param [String] remote @param [String] basedir @param\n[String] dirname The directory …\n"],["new","R10K::Deployment::Source","R10K/Deployment/Source.html#method-c-new","(name, remote, basedir, prefix)",""],["new","R10K::Environment::Base","R10K/Environment/Base.html#method-c-new","(name, basedir, dirname, options = {})","<p>Initialize the given environment.\n<p>@param name [String] The unique name describing this environment. @param …\n"],["new","R10K::Environment::Git","R10K/Environment/Git.html#method-c-new","(name, basedir, dirname, options = {})","<p>Initialize the given SVN environment.\n<p>@param name [String] The unique name describing this environment. …\n"],["new","R10K::Environment::SVN","R10K/Environment/SVN.html#method-c-new","(name, basedir, dirname, options = {})","<p>Initialize the given SVN environment.\n<p>@param name [String] The unique name describing this environment. …\n"],["new","R10K::Git::Alternates","R10K/Git/Alternates.html#method-c-new","(git_dir)","<p>@param git_dir [String] The path to the git repository\n"],["new","R10K::Git::Cache","R10K/Git/Cache.html#method-c-new","(remote)","<p>@param [String] remote @param [String] cache_root\n"],["new","R10K::Git::Commit","R10K/Git/Commit.html#method-c-new","(commit, repository = nil)",""],["new","R10K::Git::Head","R10K/Git/Head.html#method-c-new","(head, repository = nil)",""],["new","R10K::Git::Ref","R10K/Git/Ref.html#method-c-new","(ref, repository = nil)",""],["new","R10K::Git::Tag","R10K/Git/Tag.html#method-c-new","(tag, repository = nil)",""],["new","R10K::Git::UnresolvableRefError","R10K/Git/UnresolvableRefError.html#method-c-new","(*args)",""],["new","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-c-new","(ref, remote, basedir, dirname = nil)","<p>Create a new shallow git working directory\n<p>@param ref     [String, R10K::Git::Ref] @param remote  [String] …\n"],["new","R10K::InstanceCache","R10K/InstanceCache.html#method-c-new","(klass, method = :new)","<p>Initialize a new registry with a given class\n<p>@param klass [Class] The class to memoize @param method [Symbol] …\n"],["new","R10K::InstanceCache","R10K/InstanceCache.html#method-c-new","(klass, method = :new)","<p>Initialize a new registry with a given class\n<p>@param klass [Class] The class to memoize @param method [Symbol] …\n"],["new","R10K::KeyedFactory","R10K/KeyedFactory.html#method-c-new","()",""],["new","R10K::Module","R10K/Module.html#method-c-new","(name, basedir, args)","<p>Look up the implementing class and instantiate an object\n<p>This method takes the arguments for normal object …\n"],["new","R10K::Module::Forge","R10K/Module/Forge.html#method-c-new","(full_name, basedir, args)",""],["new","R10K::Module::Git","R10K/Module/Git.html#method-c-new","(name, basedir, args)",""],["new","R10K::Module::Metadata","R10K/Module/Metadata.html#method-c-new","(metadata_path)","<p>@param metadata_path [Pathname] The file path to the metadata\n"],["new","R10K::Module::SVN","R10K/Module/SVN.html#method-c-new","(name, basedir, args)",""],["new","R10K::ModuleRepository::Forge","R10K/ModuleRepository/Forge.html#method-c-new","(forge = 'forge.puppetlabs.com')",""],["new","R10K::Puppetfile","R10K/Puppetfile.html#method-c-new","(basedir, moduledir = nil, puppetfile = nil)","<p>@param [String] basedir @param [String] puppetfile The path to the\nPuppetfile, default to #{basedir}/Puppetfile …\n"],["new","R10K::Puppetfile::DSL","R10K/Puppetfile/DSL.html#method-c-new","(librarian)","<p>A barebones implementation of the Puppetfile DSL\n<p>@api private\n"],["new","R10K::R10KError","R10K/R10KError.html#method-c-new","(mesg = nil, options = {})",""],["new","R10K::SVN::Remote","R10K/SVN/Remote.html#method-c-new","(baseurl)",""],["new","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-c-new","(full_path)","<p>@param full_path [Pathname]\n"],["new","R10K::SemVer","R10K/SemVer.html#method-c-new","(ver)",""],["new","R10K::Settings::Container","R10K/Settings/Container.html#method-c-new","(parent = nil)","<p>@param parent [R10K::Settings::Container] An optional parent container\n"],["new","R10K::Source::Base","R10K/Source/Base.html#method-c-new","(name, basedir, options = {})","<p>Initialize the given source.\n<p>@param name [String] The identifier for this source. @param basedir\n[String] …\n"],["new","R10K::Source::Git","R10K/Source/Git.html#method-c-new","(name, basedir, options = {})","<p>Initialize the given source.\n<p>@param name [String] The identifier for this source. @param basedir\n[String] …\n"],["new","R10K::Source::Git::BranchName","R10K/Source/Git/BranchName.html#method-c-new","(name, opts)",""],["new","R10K::Source::SVN","R10K/Source/SVN.html#method-c-new","(name, basedir, options = {})","<p>Initialize the given source.\n<p>@param name [String] The identifier for this source. @param basedir\n[String] …\n"],["new","R10K::Source::SVN::BranchName","R10K/Source/SVN/BranchName.html#method-c-new","(name, remote, opts)",""],["new","R10K::Task::Deployment::DeployEnvironments","R10K/Task/Deployment/DeployEnvironments.html#method-c-new","(deployment)",""],["new","R10K::Task::Deployment::DeployModules","R10K/Task/Deployment/DeployModules.html#method-c-new","(deployment)",""],["new","R10K::Task::Deployment::Display","R10K/Task/Deployment/Display.html#method-c-new","(deployment)",""],["new","R10K::Task::Deployment::PurgeEnvironments","R10K/Task/Deployment/PurgeEnvironments.html#method-c-new","(deployment)",""],["new","R10K::Task::Environment::Deploy","R10K/Task/Environment/Deploy.html#method-c-new","(environment)",""],["new","R10K::Task::Module::Sync","R10K/Task/Module/Sync.html#method-c-new","(mod)",""],["new","R10K::Task::Puppetfile::DeployModules","R10K/Task/Puppetfile/DeployModules.html#method-c-new","(puppetfile)",""],["new","R10K::Task::Puppetfile::Purge","R10K/Task/Puppetfile/Purge.html#method-c-new","(puppetfile)",""],["new","R10K::Task::Puppetfile::Sync","R10K/Task/Puppetfile/Sync.html#method-c-new","(puppetfile)",""],["new","R10K::TaskRunner","R10K/TaskRunner.html#method-c-new","(opts)",""],["new","R10K::Util::Subprocess","R10K/Util/Subprocess.html#method-c-new","(argv)","<p>Prepare the subprocess invocation.\n<p>@param argv [Array&lt;String&gt;] The argument vector to execute\n"],["new","R10K::Util::Subprocess::POSIX::IO","R10K/Util/Subprocess/POSIX/IO.html#method-c-new","()",""],["new","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-c-new","(argv)",""],["new","R10K::Util::Subprocess::Result","R10K/Util/Subprocess/Result.html#method-c-new","(argv, stdout, stderr, exit_code)",""],["new","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-c-new","(argv)",""],["new","R10K::Util::Subprocess::SubprocessError","R10K/Util/Subprocess/SubprocessError.html#method-c-new","(mesg = nil, options = {})",""],["new","R10K::Util::Subprocess::Windows::IO","R10K/Util/Subprocess/Windows/IO.html#method-c-new","()",""],["new","R10K::Util::Subprocess::Windows::Runner","R10K/Util/Subprocess/Windows/Runner.html#method-c-new","(argv)",""],["outdated?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-outdated-3F","()",""],["outputter","R10K::Logging","R10K/Logging.html#method-c-outputter","()",""],["owner","R10K::Module::Forge","R10K/Module/Forge.html#method-i-owner","()","<p>@deprecated\n"],["parse_level","R10K::Logging","R10K/Logging.html#method-c-parse_level","(val)",""],["parse_options","R10K::Module::Git","R10K/Module/Git.html#method-i-parse_options","(options)",""],["parse_options","R10K::Module::SVN","R10K/Module/SVN.html#method-i-parse_options","(hash)",""],["path","R10K::Git::Cache","R10K/Git/Cache.html#method-i-path","()","<p>@!attribute [r] path\n\n<pre>@deprecated\n@return [String] The path to the git cache repository</pre>\n"],["pending_contents","R10K::Util::Purgeable","R10K/Util/Purgeable.html#method-i-pending_contents","()","<p>@return [Array&lt;String&gt;] Directory contents that are expected but not\npresent\n"],["platform","R10K::Util::Platform","R10K/Util/Platform.html#method-c-platform","()",""],["pmt","R10K::Module::Forge","R10K/Module/Forge.html#method-i-pmt","(argv)","<p>Wrap puppet module commands\n<p>@param argv [Array&lt;String&gt;]\n<p>@return [String] The stdout from the executed …\n"],["populate_loadpath","R10K::Deployment::Config::Loader","R10K/Deployment/Config/Loader.html#method-i-populate_loadpath","()",""],["pre","R10K::SemVer","R10K/SemVer.html#method-c-pre","(vstring)",""],["preload!","R10K::Deployment","R10K/Deployment.html#method-i-preload-21","()",""],["preload!","R10K::Source::Base","R10K/Source/Base.html#method-i-preload-21","()","<p>Perform any actions needed for loading environments that may have side\neffects.\n<p>Actions done during preloading …\n"],["preload!","R10K::Source::Git","R10K/Source/Git.html#method-i-preload-21","()","<p>Update the git cache for this git source to get the latest list of\nenvironments.\n<p>@return [void]\n"],["prepend_task","R10K::TaskRunner","R10K/TaskRunner.html#method-i-prepend_task","(task)",""],["puppetfile_contents","R10K::Puppetfile","R10K/Puppetfile.html#method-i-puppetfile_contents","()",""],["purge!","R10K::Util::Purgeable","R10K/Util/Purgeable.html#method-i-purge-21","()","<p>Forcibly remove all unmanaged content in `self.managed_directory`\n"],["read","R10K::Git::Alternates","R10K/Git/Alternates.html#method-i-read","()",""],["read","R10K::Module::Metadata","R10K/Module/Metadata.html#method-i-read","()","<p>Attempt to read the metadata file\n"],["ref_needs_fetch?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-ref_needs_fetch-3F","()","<p>Do we need to fetch additional objects and refs in order to resolve the\ngiven ref? @return [true, false] …\n"],["register","R10K::KeyedFactory","R10K/KeyedFactory.html#method-i-register","(key, klass)",""],["register","R10K::Module","R10K/Module.html#method-c-register","(klass)","<p>Register an module implementation for later generation\n"],["register","R10K::Source","R10K/Source.html#method-c-register","(key, klass)",""],["reinstall","R10K::Module::Forge","R10K/Module/Forge.html#method-i-reinstall","()",""],["reinstall","R10K::Module::SVN","R10K/Module/SVN.html#method-i-reinstall","()",""],["remotes","R10K::Git::Repository","R10K/Git/Repository.html#method-i-remotes","()","<p>@return [Hash&lt;String, String&gt;] A hash of remote names and fetch URLs\n@api private\n"],["remove_tags","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-remove_tags","()",""],["resolvable?","R10K::Git::Ref","R10K/Git/Ref.html#method-i-resolvable-3F","()","<p>Can we locate the commit in the related repository?\n"],["resolve_commit","R10K::Git::Repository","R10K/Git/Repository.html#method-i-resolve_commit","(pattern)","<p>Define the same interface for resolving refs.\n"],["resolve_head","R10K::Git::Repository","R10K/Git/Repository.html#method-i-resolve_head","(pattern)",""],["resolve_ref","R10K::Git::Repository","R10K/Git/Repository.html#method-i-resolve_ref","(pattern)","<p>Resolve a ref to a git commit. The given pattern can be a commit, tag, or a\nlocal or remote branch\n<p>@param …\n"],["resolve_remote_head","R10K::Git::Repository","R10K/Git/Repository.html#method-i-resolve_remote_head","(pattern, remote = 'origin')",""],["resolve_remote_head","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-resolve_remote_head","(pattern, remote = 'cache')","<p>Prefer remote heads from the &#39;cache&#39; remote over the real remote\n"],["resolve_tag","R10K::Git::Repository","R10K/Git/Repository.html#method-i-resolve_tag","(pattern)",""],["retrieve","R10K::KeyedFactory","R10K/KeyedFactory.html#method-i-retrieve","(key)",""],["retrieve","R10K::Source","R10K/Source.html#method-c-retrieve","(key)",""],["rev_parse","R10K::Git::Repository","R10K/Git/Repository.html#method-i-rev_parse","(pattern)",""],["revision","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-revision","()",""],["root","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-root","()",""],["run","R10K::TaskRunner","R10K/TaskRunner.html#method-i-run","()",""],["run","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-run","()",""],["run","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-i-run","()",""],["run","R10K::Util::Subprocess::Windows::Runner","R10K/Util/Subprocess/Windows/Runner.html#method-i-run","()",""],["runner","R10K::Util::Subprocess","R10K/Util/Subprocess.html#method-c-runner","()","<p>@return [Class &lt; R10K::Util::Subprocess::Runner]\n"],["sanitized_dirname","R10K::Git::Cache","R10K/Git/Cache.html#method-i-sanitized_dirname","()","<p>Reformat the remote name into something that can be used as a directory\n"],["search","R10K::Deployment::Config::Loader","R10K/Deployment/Config/Loader.html#method-i-search","()","<p>@return [String] The path to the first valid configfile\n"],["set_forge","R10K::Puppetfile","R10K/Puppetfile.html#method-i-set_forge","(forge)","<p>@param [String] forge\n"],["set_moduledir","R10K::Puppetfile","R10K/Puppetfile.html#method-i-set_moduledir","(moduledir)","<p>@param [String] moduledir\n"],["set_version_from_forge","R10K::Module::Forge","R10K/Module/Forge.html#method-i-set_version_from_forge","()",""],["setting","R10K::Deployment::Config","R10K/Deployment/Config.html#method-i-setting","(key)","<p>Perform a scan for key and check for both string and symbol keys\n"],["settings","R10K::Settings::Mixin::ClassMethods","R10K/Settings/Mixin/ClassMethods.html#method-i-settings","()","<p>A singleton settings container for storing manual setting configurations on\nthe extending class.\n<p>@return …\n"],["settings","R10K::Settings::Mixin::InstanceMethods","R10K/Settings/Mixin/InstanceMethods.html#method-i-settings","()","<p>@return [R10K::Settings::Container] A settings container for the given\ninstance.\n"],["sha1","R10K::Git::Ref","R10K/Git/Ref.html#method-i-sha1","()",""],["sha1","R10K::Git::RemoteHead","R10K/Git/RemoteHead.html#method-i-sha1","()",""],["sources","R10K::Deployment","R10K/Deployment.html#method-i-sources","()","<p>Lazily load all sources\n<p>This instantiates the @_sources instance variable, but should not be used\ndirectly …\n"],["stale_contents","R10K::Util::Purgeable","R10K/Util/Purgeable.html#method-i-stale_contents","()","<p>@return [Array&lt;String&gt;] Directory contents that are present but not\nexpected\n"],["start","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-start","()",""],["start","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-i-start","()","<p>Start the process asynchronously and return. Not all runners will implement\nthis.\n"],["status","R10K::Module::Forge","R10K/Module/Forge.html#method-i-status","()","<p>Determine the status of the forge module.\n<p>@return [Symbol] :absent If the directory doesn&#39;t exist …\n"],["status","R10K::Module::Git","R10K/Module/Git.html#method-i-status","()",""],["status","R10K::Module::SVN","R10K/Module/SVN.html#method-i-status","()",""],["status_pipe","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-status_pipe","()","<p>Create a pipe so that the parent can verify that the child process\nsuccessfully executed. The pipe will …\n"],["succeeded?","R10K::TaskRunner","R10K/TaskRunner.html#method-i-succeeded-3F","()",""],["success?","R10K::Util::Subprocess::Result","R10K/Util/Subprocess/Result.html#method-i-success-3F","()",""],["svn","R10K::SVN::Remote","R10K/SVN/Remote.html#method-i-svn","(argv, opts = {})","<p>Wrap SVN commands\n<p>@param argv [Array&lt;String&gt;] @param opts [Hash]\n<p>@option opts [Pathname] :cwd The …\n"],["svn","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-svn","(argv, opts = {})","<p>Wrap SVN commands\n<p>@param argv [Array&lt;String&gt;] @param opts [Hash]\n<p>@option opts [Pathname] :cwd The …\n"],["symbolize_keys!","R10K::Util::CoreExt::HashExt::SymbolizeKeys","R10K/Util/CoreExt/HashExt/SymbolizeKeys.html#method-i-symbolize_keys-21","()",""],["sync","R10K::Environment::Base","R10K/Environment/Base.html#method-i-sync","()","<p>Synchronize the given environment.\n<p>@api public @abstract @return [void]\n"],["sync","R10K::Environment::Git","R10K/Environment/Git.html#method-i-sync","()","<p>Clone or update the given Git environment.\n<p>If the environment is being created for the first time, it …\n"],["sync","R10K::Environment::SVN","R10K/Environment/SVN.html#method-i-sync","()","<p>Perform an initial checkout of the SVN repository or update the repository.\n<p>If the environment is being …\n"],["sync","R10K::Git::Cache","R10K/Git/Cache.html#method-i-sync","()",""],["sync","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-sync","()","<p>Synchronize the local git repository.\n"],["sync","R10K::Module::Forge","R10K/Module/Forge.html#method-i-sync","(options = {})",""],["sync","R10K::Module::Git","R10K/Module/Git.html#method-i-sync","()",""],["sync","R10K::Module::SVN","R10K/Module/SVN.html#method-i-sync","()",""],["sync!","R10K::Git::Cache","R10K/Git/Cache.html#method-i-sync-21","()",""],["sync_modules","R10K::Environment::Git","R10K/Environment/Git.html#method-i-sync_modules","()","<p>@api private\n"],["sync_modules","R10K::Environment::SVN","R10K/Environment/SVN.html#method-i-sync_modules","()","<p>@api private\n"],["tags","R10K::Git::Repository","R10K/Git/Repository.html#method-i-tags","()",""],["to_a","R10K::Git::Alternates","R10K/Git/Alternates.html#method-i-to_a","()",""],["to_s","R10K::Git::Ref","R10K/Git/Ref.html#method-i-to_s","()",""],["to_s","R10K::SemVer","R10K/SemVer.html#method-i-to_s","()",""],["to_s","R10K::Util::Subprocess::SubprocessError","R10K/Util/Subprocess/SubprocessError.html#method-i-to_s","()",""],["trunk","R10K::SVN::Remote","R10K/SVN/Remote.html#method-i-trunk","()","<p>@todo validate that the path to trunk exists in the remote\n"],["uninstall","R10K::Module::Forge","R10K/Module/Forge.html#method-i-uninstall","()",""],["uninstall","R10K::Module::Git","R10K/Module/Git.html#method-i-uninstall","()",""],["uninstall","R10K::Module::SVN","R10K/Module/SVN.html#method-i-uninstall","()",""],["update","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-update","()",""],["update","R10K::Module::SVN","R10K/Module/SVN.html#method-i-update","()",""],["update","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-update","(revision = nil)",""],["update_remotes","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-update_remotes","()",""],["update_remotes?","R10K::Git::WorkingDir","R10K/Git/WorkingDir.html#method-i-update_remotes-3F","()",""],["upgrade","R10K::Module::Forge","R10K/Module/Forge.html#method-i-upgrade","()",""],["url","R10K::SVN::WorkingDir","R10K/SVN/WorkingDir.html#method-i-url","()",""],["valid?","R10K::SemVer","R10K/SemVer.html#method-c-valid-3F","(ver)",""],["valid?","R10K::Source::Git::BranchName","R10K/Source/Git/BranchName.html#method-i-valid-3F","()",""],["valid_key?","R10K::Settings::Container","R10K/Settings/Container.html#method-i-valid_key-3F","(key)","<p>Determine if a key is a valid setting.\n<p>@param key [Symbol]\n<p>@return [true, false]\n"],["validate?","R10K::Source::Git::BranchName","R10K/Source/Git/BranchName.html#method-i-validate-3F","()",""],["validate_key!","R10K::Settings::Container","R10K/Settings/Container.html#method-i-validate_key-21","(key)",""],["version","R10K::Module::Forge","R10K/Module/Forge.html#method-i-version","()",""],["version","R10K::Module::Git","R10K/Module/Git.html#method-i-version","()",""],["versions","R10K::ModuleRepository::Forge","R10K/ModuleRepository/Forge.html#method-i-versions","(module_name)","<p>Query for all published versions of a module\n<p>@example\n\n<pre>forge = R10K::ModuleRepository::Forge.new\nforge.versions(&#39;adrien/boolean&#39;) ...</pre>\n"],["vivify","R10K::Deployment::Source","R10K/Deployment/Source.html#method-c-vivify","(name, attrs)","<p>Create a new source from a hash representation\n<p>@param name [String] The name of the source @param opts …\n"],["wait","R10K::Util::Subprocess::POSIX::Runner","R10K/Util/Subprocess/POSIX/Runner.html#method-i-wait","()",""],["wait","R10K::Util::Subprocess::Runner","R10K/Util/Subprocess/Runner.html#method-i-wait","()","<p>Wait for the process to exit. Not all runners will implement this.\n"],["warn_on_missing","R10K::Task::Puppetfile::DeployModules","R10K/Task/Puppetfile/DeployModules.html#method-i-warn_on_missing","(existing, requested)",""],["windows?","R10K::Util::Platform","R10K/Util/Platform.html#method-c-windows-3F","()",""],["with_environments","R10K::Task::Deployment::SharedBehaviors","R10K/Task/Deployment/SharedBehaviors.html#method-i-with_environments","(names = [])","<p>@param [Array&lt;String&gt;] names The list of environments to deploy.\n"],["write","R10K::Git::Alternates","R10K/Git/Alternates.html#method-i-write","(entries)",""]]}}